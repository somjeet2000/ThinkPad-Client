/*
Requirements:
    Branch Specific:- 
        main branch needs to be deployed in Development environment. main -> Development
        Jenkinsfile should be updated in the only in main branch.   Jenkinsfile -> main
        Release branches will be deployed into Production environment.  1.0.0.25.02 -> Production

    Stages:-
        1. Clean workspace
        2. Code Checkout
        3. Static Code Analysis by Sonarqube
        4. SonarQube Quality Gate
        5. Install Dependencies
        6. Build Application
        7. Deploy to Netlify Service
        8. Post Stages

    Future Scopes:-
        1. If any error in the SonarQube Code Analysis, the proper report should be sent to an email.
        2. Post deployment, the confirmation will be send through an email.
*/

pipeline {
    agent any

    // Mention the Environment variables
    environment {
        GITHUB_URL = 'https://github.com/somjeet2000/ThinkPad-Client.git'
        NETLIFY_AUTH_TOKEN = credentials('netlify-auth-token')
    }

    // Stages will run to build the pipeline
    stages {

        // Stage 1: Clean Workspace
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        // Stage 2: Code Checkout
        stage('Code Checkout') {
            steps {
                script {
                    // Check if Branch is selected as Others, and Others is empty
                    if(params.Branch == 'Others' && !params.Others?.trim()) {
                        error "Branch Name is required when selected Others as Branch"
                    }

                    // Determine the Branch to select
                    def branchToSelect = params.Branch == 'Others' ? params.Others : params.Branch
                    echo "Branch to Build: ${branchToCheckout}"

                    checkout scmGit(
                        branches: [[name: "*/${branchToCheckout}"]], 
                        extensions: [], 
                        userRemoteConfigs: [[url: '${GITHUB_URL}']])
                }
            }
        }

        // Stage 3: Static Code Analysis

        // Stage 4: SonarQube Quality Gate

        // Stage 5: Install Dependencies
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        // Stage 6: Build Application
        stage('Build Application') {
            steps {
                sh 'npm run build'
            }
        }

        // Stage 7: Deploy to Netlify Service
        stage('Deploy to Netlify Service') {
            steps {
                script {
                    if (params.Environment == 'Development') {
                        sh 'netlify deploy --prod --auth $NETLIFY_AUTH_TOKEN'
                    } else if (params.Environment == 'Production') {
                        sh 'netlify deploy --prod --auth $NETLIFY_AUTH_TOKEN'
                    }
                }
            }
        }
    }

    post {
        success {
            script {
                emailext subject: "Deployment Successful",
                          body: "The deployment to ${params.Environment} environment from Branch: ${params.Branch == 'Others' ? params.Others : params.Branch} was successful.",
                          to: 'somjeetsrimani@gmail.com'
            }
        }
        failure {
            script {
                emailext subject: "Deployment Failed",
                          body: "The deployment to ${params.Environment} environment from Branch: ${params.Branch == 'Others' ? params.Others : params.Branch} failed. Please check the logs.",
                          to: 'somjeetsrimani@gmail.com'
            }
        }
    }
}